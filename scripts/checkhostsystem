#!/bin/bash
# Simple script to list version numbers of critical development tools
export LC_ALL=C

# report-version takes a list of executables
# and reports whether they exist, whether their
# default path is a link to something else,
# and the first line of its version output
function report-version() {
  for x in $*; do
    local t=$(which ${x} 2>/dev/null)
    if [ "X" == "X${t}" ]; then
      echo "${x}: not found"
    else
      echo -n "${t}"
      local l=$(readlink -f ${t})
      [ "X${t}" == "X${l}" ] || echo -n " -> ${l}";
      echo ": $(${x} --version | head -n1)"
    fi
  done
}

# begin with bash
report-version bash

#bash --version | head -n1 | cut -d' ' -f2-4
MYSH=$(readlink -f /bin/sh)
echo "/bin/sh -> ${MYSH}"
[ "Xbash" == "X$(basename ${MYSH})" ] || echo "ERROR: /bin/sh does not point to bash"
unset MYSH

# Linux version info (could also use uname -a)
cat /proc/version

# now coreutils
echo "Coreutils: $(chown --version | head -n1 | cut -d' ' -f2-)"

# now binutils
echo -n "Binutils: "
MYBU="$(ld --version 2>/dev/null | head -n1 | cut -d' ' -f3-)"
[ "X" == "X${MYBU}" ] && echo 'not found' || echo ${MYBU}
unset MYBU

# awk requires special handling
echo "$(which awk 2>/dev/null): $(awk -W version 2>/dev/null | head -n1)"

# perl requires special handling
echo "$(which perl 2>/dev/null): $(perl -V:version | cut -d\' -f2)"

# these all report their versions in a common way
report-version ldd diff find grep sed tar gzip xz gawk bison yacc m4 make patch makeinfo git

# bzip2 requires special handling
MYBZ2="$(which bzip2 2>/dev/null)"
if [ "X" == "X${MYBZ2}" ]; then
    echo "bzip2: not found"
else
    echo "${MYBZ2}: $(bzip2 --version 2>&1 < /dev/null | head -n1 | cut -d' ' -f7-)"
fi
unset MYBZ2

# compiler tools
report-version gcc g++

# pass a valid C++ program to stdin and check whether it builds correctly
if [ "X" == "X$(which g++ 2>/dev/null)" ]; then
  echo "ERROR: g++ compilation unavailable"
else
  echo 'int main(){return 0;}' | g++ -x c++ -o /dev/null - && \
    echo 'g++ compilation OK' || \
      echo 'ERROR: g++ compilation failed'
fi
